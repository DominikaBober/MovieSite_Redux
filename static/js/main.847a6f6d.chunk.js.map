{"version":3,"sources":["ducks/Movies/selectors.js","ducks/Persons/selectors.js","ui/Movies/Movies.js","ui/popup.js","ui/no_page.js","ducks/Movies/types.js","ducks/Movies/operations.js","ducks/Movies/actions.js","ui/Movies/Movie.js","ui/Dashboard/Dashboard.js","ui/Persons/Persons.js","ducks/Persons/types.js","ui/Persons/Person.js","ducks/Persons/operations.js","ducks/Persons/actions.js","ui/Forms/MovieForm.js","ui/Forms/PersonForm.js","ui/Forms/Forms.js","ui/error.js","ui/App/App.js","ducks/store.js","ducks/Movies/reducer.js","ducks/Persons/reducer.js","index.js"],"names":["getMovies","state","movies","getPersons","persons","connect","resources","useState","pagePersons","setPersons","sortMovies","setsortMovies","filterMovies","setfilterMovies","currentPage","setCurrentPage","moviesOnPage","number_of_page","max","pages","setPages","sortType","setSortType","useEffect","length","Array","Math","ceil","keys","map","el","type","sortProperty","id","release_date","title","genre","sorted","sort","a","b","Date","sortArray","filrtDirector","setFilrtDirector","filrtGenre","setFilrtGenre","filrtDate","setFilrtDate","className","onChange","e","target","value","parseInt","onClick","filter","person","movie","director_id","document","getElementById","first_name","slice","last_name","reduce","push","initialValues","date_start","date_end","onSubmit","values","filter_by_dir","filter_by_genre","filter_by_date","temp_fiterMovies","page_movie","indexOf","enableReinitialize","errors","touched","isValidating","name","dateFormat","placeholder","required","to","src","image_url","min","number","Popup","props","handleClose","content","NoPage","types","GET_MOVIES","ADD_MOVIE","DELETE_MOVIE","UPDATE_MOVIE","updateMovie","dispatch","payload","mapDispatchToProps","deleteMovie","movieId","movieID","useParams","setMovie","director","setDirector","badId","setbadID","isOpen","setIsOpen","popupContext","setPopupContext","HandleClose","setHandleClose","navigate","useNavigate","toLocaleDateString","description","anyMovies","setAnyMovies","console","log","alt","sortPersons","setsortPersons","filterPersons","setfilterPersons","personsOnPage","birth_date","nationality","filrtNationality","setFilrtDNationality","filrtDirectedMovies","setFilrtDirectedMovies","filrtAge","setFilrtAge","directed_movies","concat","a_val","filter_by_nat","filter_by_movies","filter_by_age","temp_fiterPersons","GET_PERSONS","ADD_PERSON","DELETE_PERSON","UPDATE_PERSON","deletePerson","PersonId","personID","setPerson","directedMovies","setDirectedMovies","showDirectedMovies","setShowDirectedMovies","forEach","addMovie","newMovie","initialvalues","setInitialvalues","Validate","handleSubmit","actions","put_values","new_id","resetForm","validate","component","Object","as","addPerson","newPerson","updatePerson","Forms","store","Error","resources_pl","setResources","links","path","location","useLocation","link","pathname","languale","resources_en","exact","element","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","combinedReducers","combineReducers","action","updatedElement","createStore","applyMiddleware","thunk","createMiddleware","logger","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.847a6f6d.chunk.js","sourcesContent":["export const getMovies = (state) => state.movies;\n\nexport const getMovie = (state, movieId) => {return state.movies.find(movie => movie.id === parseInt(movieId))}\n","export const getPersons = (state) =>  state.persons;\r\n\r\nexport const getPerson = (state, personId) => { return state.persons.find(movie => movie.id === parseInt(personId)) }\r\n","import './Movies.scss';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport {Formik, Form} from \"formik\";\nimport {DatePicker} from \"react-formik-ui\";\n\n// import operations\nimport { getMovies } from '../../ducks/Movies/selectors';\nimport { getPersons } from '../../ducks/Persons/selectors';\n\nconst Movies = ({resources, movies, persons}) => {\n\n    const [pagePersons, setPersons] = useState(persons);\n    const [sortMovies, setsortMovies] = useState(movies);\n    const [filterMovies, setfilterMovies] = useState(movies);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pages, setPages] = useState({\n        moviesOnPage: 0,\n        number_of_page: [],\n        max: 0\n    })\n    const [sortType, setSortType] = useState('id');\n    useEffect(() => {\n        const sortArray = type => {\n            const types = {\n                id: 'id',\n                release_date: 'release_date',\n                title: 'title',\n                // director_id: 'director',\n                genre: 'genre'\n            };\n            const sortProperty = types[type];\n            const sorted = [...movies].sort(function(a, b){\n                if(sortProperty==='release_date'){\n                    return  new Date(a[sortProperty]) - new Date(b[sortProperty]);\n                }\n                if(a[sortProperty] < b[sortProperty]) { return -1; }\n                if(a[sortProperty] > b[sortProperty]) { return 1; }\n                return 0})\n            // console.log(sorted);\n            setsortMovies(sorted);\n        };\n        // sortArray(sortType);\n        if(movies){\n            if(movies.length > 0){\n                if(persons.length > 0){\n                    setPersons(persons);\n                    setsortMovies(movies);\n                    setfilterMovies(movies);\n                    setPages({\n                        moviesOnPage: 6,\n                        number_of_page: [...Array(Math.ceil(movies.length/6)).keys()].map(el => el+1),\n                        max: [...Array(Math.ceil(movies.length/6)).keys()][[...Array(Math.ceil(movies.length/6)).keys()].length-1]+1\n                    });\n                }\n                \n            }\n            sortArray(sortType);\n        }\n    }, [sortType, movies, persons]);\n\n\n    // filtrowanie\n    const [filrtDirector, setFilrtDirector] = useState(false);\n    const [filrtGenre, setFilrtGenre] = useState(false);\n    const [filrtDate, setFilrtDate] = useState(false);\n\n    const resetFilter = () => {\n        setfilterMovies(sortMovies);\n        setCurrentPage(1);\n        setPages({\n            moviesOnPage: parseInt(pages.moviesOnPage),\n            number_of_page: [...Array(Math.ceil(sortMovies.length/parseInt(pages.moviesOnPage))).keys()].map(el => el+1),\n            max: [...Array(Math.ceil(sortMovies.length/pages.moviesOnPage)).keys()][[...Array(Math.ceil(sortMovies.length/pages.moviesOnPage)).keys()].length-1]+1\n        });\n    }\n\n    const handleFilter = (values) => {\n\n        const filter_by_dir = sortMovies.filter((movie) => document.getElementById(`button_${movie.director_id}`) ? document.getElementById(`button_${movie.director_id}`).className === \"checked\" ? true : false : true)\n        const filter_by_genre = sortMovies.filter((movie) => document.getElementById(`button_${movie.genre}`) ? document.getElementById(`button_${movie.genre}`).className === \"checked\" ? true : false : true)\n        const filter_by_date = sortMovies.filter((movie) => values.date_start!==\"\" ? new Date(movie.release_date) - values.date_start > 0 : true )\n                                .filter((movie) => values.date_end!==\"\" ? new Date(movie.release_date) - values.date_end < 0 : true )\n\n        const temp_fiterMovies = (filter_by_dir.length === 0 ? sortMovies : filter_by_dir).filter((page_movie) => {\n            return (filter_by_genre.length === 0 ? sortMovies : filter_by_genre).indexOf(page_movie) !== -1})\n            .filter((page_movie) => {\n            return filter_by_date.indexOf(page_movie) !== -1})                        \n        setfilterMovies(temp_fiterMovies)\n        setCurrentPage(1)\n        setPages({\n            moviesOnPage: parseInt(pages.moviesOnPage),\n            number_of_page: [...Array(Math.ceil(temp_fiterMovies.length/parseInt(pages.moviesOnPage))).keys()].map(el => el+1),\n            max: [...Array(Math.ceil(temp_fiterMovies.length/pages.moviesOnPage)).keys()][[...Array(Math.ceil(temp_fiterMovies.length/pages.moviesOnPage)).keys()].length-1]+1\n        })\n    }\n\n\n    return (\n        <>\n        {(movies && persons) &&\n        <div className=\"Movies\">\n            <div className=\"addition\" id=\"col\">\n            <div className=\"content_2\">\n                <div >{resources['Movies']['Sort']['sort']}</div>\n                    <select  onChange={(e) => setSortType(e.target.value)}>\n                        <option value='id'>{resources['Movies']['Sort']['default']}</option>\n                        <option value='release_date'>{resources['Movies']['Sort']['release_date']}</option>\n                        <option value='title'>{resources['Movies']['Sort']['title']}</option>\n                        {/* <option value='director_id'>{resources['Movies']['Sort']['director']}</option> */}\n                        <option value='genre'>{resources['Movies']['Sort']['genre']}</option>\n                    </select>\n            </div>\n            <div className=\"content_2\">\n                <div >{resources['Movies']['number_of_movies']}</div>\n                    <select  onChange={(e) => {\n                        setCurrentPage(1)\n                        setPages({\n                            moviesOnPage: parseInt(e.target.value),\n                            number_of_page: [...Array(Math.ceil(filterMovies.length/parseInt(e.target.value))).keys()].map(el => el+1),\n                            max: [...Array(Math.ceil(filterMovies.length/e.target.value)).keys()][[...Array(Math.ceil(filterMovies.length/e.target.value)).keys()].length-1]+1\n                        })\n                        }}>\n                        <option value='6'>6</option>\n                        <option value='10'>10</option>\n                        <option value='16'>16</option>\n                        <option value='26'>26</option>\n                    </select>\n            </div>\n            <div className=\"content_2\" id=\"col\">\n                <div>{resources['Movies']['Filtr']['filtr']}</div>\n\n                        <button onClick={()=>setFilrtDirector(!filrtDirector)} className=\"filtr_button\">{resources['Movies']['Filtr']['director']}</button>\n                        {filrtDirector && \n                            <div id=\"col\">\n                                {persons.filter(person => movies.filter(movie => movie.director_id===person.id).length>0).map(\n                                    person => (\n                                        <button className=\"unchecked\" onClick={() => {\n                                            document.getElementById(`button_${person.id}`).className = document.getElementById(`button_${person.id}`).className===\"unchecked\" ? \"checked\" : \"unchecked\";\n                                        }} id={`button_${person.id}`} key={`dir_${person.id}`}>\n                                            <div className=\"title\">{person.first_name.slice(0,1)}. {person.last_name}</div>\n                                        </button>\n                                    )\n                                )}\n                            </div>\n                        }\n                        <button onClick={()=>setFilrtGenre(!filrtGenre)} className=\"filtr_button\">{resources['Movies']['Filtr']['genre']}</button>\n                        {filrtGenre && \n                            <div id=\"grid\">\n                                {movies.map(movie => [movie.genre, resources['Form']['genres'][movie.genre]])\n                                .reduce((a,b) => {if (a.filter(genre => genre[0]===b[0]).length===0){ a.push(b)} return a},[])\n                                .sort(function(a, b){if(a[1] < b[1]) { return -1; } if(a[1] > b[1]) { return 1; } return 0}).map(\n                                        genre => (\n                                            <button className=\"unchecked\" onClick={() => {\n                                                document.getElementById(`button_${genre[0]}`).className = document.getElementById(`button_${genre[0]}`).className===\"unchecked\" ? \"checked\" : \"unchecked\";\n                                            }} id={`button_${genre[0]}`}  key={`genre_${genre}`}>\n                                                <div className=\"title\">{genre[1]}</div>\n                                            </button>\n                                    )\n                                )}\n                            </div>\n                        }\n                        <button onClick={()=>setFilrtDate(!filrtDate)} className=\"filtr_button\">{resources['Movies']['Filtr']['data']}</button>\n                        <Formik\n                        initialValues={{\n                            date_start: \"\",\n                            date_end: \"\"\n                        }}\n                        onSubmit={handleFilter}\n                        enableReinitialize = {true}>\n                        {({ errors, touched, isValidating }) => (\n                        <Form className=\"Form\" id=\"col\">\n                        {filrtDate &&\n                        <div id=\"col\">\n                            <div id=\"lil_text\">{resources['Movies']['Filtr']['from']}</div>\n                            <DatePicker\n                                name='date_start'\n                                id=\"pole\"\n                                dateFormat='dd.MM.yyyy'\n                                placeholder='dd.mm.yyyy'\n                                className=\"date_picker\"\n                                required\n                            />\n                            <div id=\"lil_text\">{resources['Movies']['Filtr']['to']}</div>\n                            <DatePicker\n                                name='date_end'\n                                id=\"pole\"\n                                dateFormat='dd.MM.yyyy'\n                                placeholder='dd.mm.yyyy'\n                                className=\"date_picker\"\n                                required\n                            />\n                        </div>}\n                        {(filrtDirector || filrtGenre || filrtDate) &&\n                            <button type=\"submit\" id=\"pole\" className=\"filtr_button\">\n                                {resources['Form']['submit_filtr']}\n                            </button>\n                        }\n                    </Form>)}\n            </Formik>\n            {(filrtDirector || filrtGenre || filrtDate) &&\n                <button id=\"pole\" className=\"filtr_button\" onClick={() => resetFilter()}>\n                    {resources['Form']['cancle_filtr']}\n                </button>\n            }                    \n            </div>\n            </div>\n            <div className=\"content\">\n                <div id=\"grid\">\n                {sortMovies.filter((movie) => {return filterMovies.indexOf(movie) !== -1}).length === 0 ? (\n                        <div className=\"error\">{resources['Movies']['no_movies']}</div>\n                ):(\n                sortMovies.filter((movie) => {return filterMovies.indexOf(movie) !== -1})\n                .slice((currentPage-1)*pages.moviesOnPage, currentPage*pages.moviesOnPage).map( movie => (\n                        <Link to={`/movie/${movie.id}`} className=\"pod\" id=\"movie_pod\" key={`${movie.id}`}>\n                            <div id=\"row\">\n                            <img className=\"poster\" src={movie.image_url}/>\n                                <div id=\"col\" className=\"movie_info\">\n                                    <div className=\"title\">{movie.title}</div>\n                                    {movie.director_id && <div id=\"director\">\n                                        {pagePersons.filter(person => person.id === movie.director_id)[0].last_name}\n                                    </div>}\n                                </div>\n                            </div>\n                        </Link>                \n                    )))}\n                </div>\n                {pages.number_of_page.length>1 && (\n                    <div className=\"pagenubmer\" id=\"row\">\n                    { currentPage>2 && (<button onClick={()=>{setCurrentPage(1)}} id=\"pagenubmer\"> first </button>)}\n                    {Math.max(0,currentPage-3)!==0 && (<div>...</div>)}\n                    { currentPage>1 && (<button onClick={()=>{setCurrentPage(currentPage-1)}} id=\"pagenubmer\"> &#8592; </button>)}\n                    {pages.number_of_page.slice(Math.max(0,currentPage-3), Math.min(currentPage+2, pages.max)).map((number) => \n                        (number===currentPage ? (<button onClick={()=>{setCurrentPage(number)}} id=\"pagenubmer\" className=\"activepage\" key={`pagenubmer${number}`}>{number}</button>\n                        ):(<button onClick={()=>{setCurrentPage(number)}} id=\"pagenubmer\">{number}</button>))\n                    )}\n                    { currentPage<pages.max && (<button onClick={()=>{setCurrentPage(currentPage+1)}} id=\"pagenubmer\"> &#8594; </button>)}\n                    {Math.min(currentPage+2,pages.max)!==pages.max && (<div>...</div>)}\n                    { currentPage<pages.max-1 && (<button onClick={()=>{setCurrentPage(pages.max)}} id=\"pagenubmer\"> last </button>)}\n                </div>\n                )}\n            </div>\n        </div>}\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n      persons: getPersons(state),\n      movies: getMovies(state)\n    }\n}\n  \nconst mapDispatchToProps = {\n    getPersons,\n    getMovies\n}\n  \nexport default connect(mapStateToProps, null)(Movies);\n","const Popup = props => {\n    return (\n        <div className=\"popup-box\">\n            <div className=\"box\">\n                <span className=\"close-icon\" onClick={props.handleClose}>&#10006;</span>\n                {props.content}\n            </div>\n        </div>\n    );\n};\n\nexport default Popup","const NoPage = ({resources}) => {\n    return (\n        <div className=\"content_2\" id=\"error\">\n            <div className=\"text\">\n                {resources['Error']['404']}\n            </div>\n        </div>\n    );\n};\n\nexport default NoPage","const GET_MOVIES = 'GET_MOVIES';\r\nconst ADD_MOVIE = 'ADD_MOVIE';\r\nconst DELETE_MOVIE = 'DELETE_MOVIE';\r\nconst UPDATE_MOVIE = 'UPDATE_MOVIE';\r\n\r\nconst types = {\r\n    GET_MOVIES,\r\n    ADD_MOVIE,\r\n    DELETE_MOVIE,\r\n    UPDATE_MOVIE,\r\n}\r\n\r\nexport default types;","import axios from \"axios\";\nimport * as actions from './actions';\nimport movies from './../movies.json';\n\nexport const getMovies = () => {\n    return dispatch => {\n        dispatch(actions.getMoviesAction(movies));\n    }\n}\n\nexport const addMovie = (newMovie) => {\n    return async dispatch => {\n        dispatch(actions.addMovieAction(newMovie));\n    }\n}\n\nexport const updateMovie = (movie) => {\n    return async dispatch => {\n        dispatch(actions.updateMovieAction(movie));\n    }\n}\n\nexport const deleteMovie = (movieId) => {\n    return async dispatch => {\n        dispatch(actions.deleteMovieAction({id: movieId}));\n    }\n}\n","import types from './types';\n\nexport const getMoviesAction = (payload) => ({\n    type: types.GET_MOVIES,\n    payload\n});\n\nexport const addMovieAction = (payload) => ({\n    type: types.ADD_MOVIE,\n    payload\n});\n\nexport const deleteMovieAction = (payload) => ({\n    type: types.DELETE_MOVIE,\n    payload\n});\n\nexport const updateMovieAction = (payload) => ({\n    type: types.UPDATE_MOVIE,\n    payload\n});\n","import './Movies.scss';\nimport { useState, useEffect } from \"react\";\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Popup from '../popup';\nimport NoPage from '../no_page';\n\nimport { getMovies } from '../../ducks/Movies/selectors';\nimport { getPersons } from '../../ducks/Persons/selectors';\nimport { deleteMovie } from '../../ducks/Movies/operations';\n\n function Movie({resources, movies, persons, deleteMovie}) {\n    \n    const {id: movieID} = useParams();\n    const [movie, setMovie] = useState(movies.filter(movie => movie.id === parseInt(movieID)));\n    const [director, setDirector] = useState(movie.length === 1 ? (persons.filter(person => person.id === movie[0].director_id)):(false));\n    const [badId, setbadID] = useState(movie.length > 0 ? (false):(true));\n    const [isOpen, setIsOpen] = useState(false);\n    const [popupContext, setPopupContext] = useState(\"\");\n    const [HandleClose, setHandleClose] = useState(() => () => setIsOpen(false));\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if(movies.length > 0){\n            setMovie(movies.filter(movie => movie.id === parseInt(movieID)));\n            setbadID(movies.filter(movie => movie.id === parseInt(movieID)).length > 0 ? (false):(true))\n            if(persons.length > 0){\n                setDirector(movies.filter(movie => movie.id === parseInt(movieID)).length === 1 ? (persons.filter(person => person.id === movies.filter(movie => movie.id === parseInt(movieID))[0].director_id)):(false))\n            }\n        }\n    }, [movies, persons])\n\n    const handleDelete = () => {\n        deleteMovie(parseInt(movieID));\n        navigate('/movies');\n    }\n\n    return (\n        <div>\n            {movies.length > 0 && persons.length > 0 && (\n            <>\n            { badId ? (\n                <NoPage resources={resources}/>\n            ) : (\n                <div id=\"row\">\n                    <div id=\"col\" className=\"movie\">\n                        <div className=\"nag\"> {movie[0].title} </div>\n                        <div className=\"content\">\n                            <div className=\"movie_pod\" id=\"row\">\n                                <div id=\"col\">\n                                    {director.length === 1 && <Link to={`/person/${director[0].id}`} className=\"link\"> {resources['Movies']['director']}: {director[0].first_name} {director[0].last_name} </Link>}\n                                    <div id=\"dsc\"> {resources['Movies']['release_date']}: {new Date(movie[0].release_date).toLocaleDateString('en-GB')} </div>\n                                    <div id=\"dsc\"> {resources['Movies']['genre']}: {resources['Form']['genres'][movie[0].genre]} </div>\n                                    <div id=\"dsc\"> {resources['Movies']['description']}: {movie[0].description} </div>\n                                </div>\n                                <img className=\"detail_poster\" src={movie[0].image_url}/>\n                            </div>\n                        </div>\n                        <div id=\"grid\" className=\"buttons\">\n                            <Link className=\"nag\" to={`/movie/${movieID}/edit`}>{ resources['Form']['edit']}</Link>\n                            <button className=\"nag\" onClick={async () => {\n                                setPopupContext(resources[\"Movies\"][\"delete_movie\"]);\n                                setHandleClose(() => () => handleDelete());\n                                setIsOpen(true)\n                            }}>  {resources['Persons']['delete']}</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n            </>\n            )}\n            {isOpen && <Popup\n                content={popupContext}\n                handleClose={() => {HandleClose()}}\n            />}\n        </ div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n      persons: getPersons(state),\n      movies: getMovies(state)\n    }\n}\n  \nconst mapDispatchToProps = {\n    deleteMovie,\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);\n","import { useState, useEffect } from 'react';\nimport {Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\n\n// import operations\nimport { getMovies } from '../../ducks/Movies/selectors';\nimport { getPersons } from '../../ducks/Persons/selectors';\n\n\nconst Dashboard = ({resources, movies, persons}) => {\n\n    const [anyMovies, setAnyMovies] = useState(false)\n\n    useEffect(() => {\n        if (movies){\n            if(movies.length > 0){\n                setAnyMovies(true)\n            }\n        }\n    }, [movies, persons])\n\n    console.log(\"movies\", movies, \"persons\", persons);\n\n    return (\n        <div id=\"col\" className=\"Dashboard\">\n            <div className=\"nag\">{resources['Dashboard']['new_movies']}</div>\n            {anyMovies &&\n            <div className=\"content\" id=\"row\">\n                {movies.sort((a,b) => b.id - a.id).slice(0, 3).map( movie => (\n                    <Link to={`/movie/${movie.id}`} className=\"pod\" id=\"col\" key={`${movie.id}`}>\n                        <img className=\"big_poster\" src={movie.image_url} alt={movie.title}/>\n                        <div className=\"title\">{movie.title}</div>\n                    </Link>\n                ))}\n            </div>}\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        movies: getMovies(state),\n        persons: getPersons(state)\n    }\n}\n\n  \nexport default connect(mapStateToProps, null)(Dashboard);\n","import './Persons.scss';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport {Formik, Form} from \"formik\";\nimport {DatePicker} from \"react-formik-ui\";\n\n// import operations\nimport { getMovies } from '../../ducks/Movies/selectors';\nimport { getPersons } from '../../ducks/Persons/selectors';\n\nconst Persons = ({resources, movies, persons}) => {\n\n    const [sortPersons, setsortPersons] = useState(persons);\n    const [filterPersons, setfilterPersons] = useState(persons);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pages, setPages] = useState({\n        personsOnPage: 0,\n        number_of_page: [],\n        max: 0\n    })\n\n    const [sortType, setSortType] = useState('id');\n    useEffect(() => {\n        const sortArray = type => {\n            const types = {\n                id: 'id',\n                first_name: 'first_name',\n                last_name: 'last_name',\n                birth_date: 'birth_date',\n                nationality: 'nationality'\n            };\n            const sortProperty = types[type];\n            const sorted = [...persons].sort(function(a, b){\n                if (sortProperty===\"birth_date\"){\n                    return  new Date(a[sortProperty]) - new Date(b[sortProperty]);\n                }\n                else{\n                    if(a[sortProperty] < b[sortProperty]) { return -1; }\n                    if(a[sortProperty] > b[sortProperty]) { return 1; }\n                    return 0}\n                })\n            console.log(sorted);\n            setsortPersons(sorted);\n        };\n        if(movies){\n            if(movies.length > 0){\n                if(persons.length > 0){\n                    setsortPersons(persons)\n                    setfilterPersons(persons)\n                    setPages({\n                        personsOnPage: parseInt(6),\n                        number_of_page: [...Array(Math.ceil(persons.length/parseInt(6))).keys()].map(el => el+1),\n                        max: [...Array(Math.ceil(persons.length/6)).keys()][[...Array(Math.ceil(persons.length/6)).keys()].length-1]+1\n                    })\n                    sortArray(sortType);\n                }\n            }\n        }\n    }, [sortType, movies, persons]);\n\n    // filtrowanie\n\n    const [filrtNationality, setFilrtDNationality] = useState(false);\n    const [filrtDirectedMovies, setFilrtDirectedMovies] = useState(false);\n    const [filrtAge, setFilrtAge] = useState(false);\n\n    const resetFilter = () => {\n        setfilterPersons(sortPersons);\n        setCurrentPage(1);\n        setPages({\n            personsOnPage: parseInt(pages.personsOnPage),\n            number_of_page: [...Array(Math.ceil(sortPersons.length/parseInt(pages.personsOnPage))).keys()].map(el => el+1),\n            max: [...Array(Math.ceil(sortPersons.length/pages.personsOnPage)).keys()][[...Array(Math.ceil(sortPersons.length/pages.personsOnPage)).keys()].length-1]+1\n        });\n    }\n\n    const handleFilter = (values) => {\n\n        const filter_by_nat = sortPersons.filter((person) => document.getElementById(`button_${person.nationality}`) ? document.getElementById(`button_${person.nationality}`).className === \"checked\" ? true : false : true)\n        const filter_by_movies = sortPersons.filter(person => movies.filter(movie => movie.director_id===person.id).length!==0)\n        .filter((person) => \n        filrtDirectedMovies ?\n        document.getElementById(`button_${movies.reduce((a,b) => {\n                if (a.filter(directed_movies => directed_movies[0]===b.director_id).length===0){\n                    a.push([b.director_id, 1]);\n                    return a;\n                }else{\n                    return a.filter(directed_movies => directed_movies[0]!==b.director_id)\n                    .concat([[b.director_id, a.filter(directed_movies => directed_movies[0]===b.director_id)[0][1]+1]])\n            }},[]).filter(directed_movies => directed_movies[0]===person.id)[0][1]}`).className === \"checked\" ? true : false : false\n        )\n        const filter_by_age = sortPersons.filter((person) => values.date_start!==\"\" ? new Date(person.birth_date) - values.date_start > 0 : true )\n                                .filter((person) => values.date_end!==\"\" ? new Date(person.birth_date) - values.date_end < 0 : true )\n\n        const temp_fiterPersons = (filter_by_nat.length === 0 ? sortPersons : filter_by_nat).filter((page_movie) => {\n            return (filter_by_movies.length === 0 ? sortPersons : filter_by_movies).indexOf(page_movie) !== -1})\n            .filter((page_movie) => {\n            return filter_by_age.indexOf(page_movie) !== -1})\n        setfilterPersons(temp_fiterPersons);\n        setCurrentPage(1);\n        setPages({\n            personsOnPage: parseInt(pages.personsOnPage),\n            number_of_page: [...Array(Math.ceil(temp_fiterPersons.length/parseInt(pages.personsOnPage))).keys()].map(el => el+1),\n            max: [...Array(Math.ceil(temp_fiterPersons.length/pages.personsOnPage)).keys()][[...Array(Math.ceil(temp_fiterPersons.length/pages.personsOnPage)).keys()].length-1]+1\n        });\n    }\n\n    return (\n        <>\n        {movies && persons &&\n        <div className=\"Persons\">\n            <div className=\"addition\" id=\"col\">\n            <div className=\"content_2\">\n                <div >{resources['Persons']['Sort']['sort']}</div>\n                    <select  onChange={(e) => setSortType(e.target.value)}>\n                        <option value='id'>{resources['Persons']['Sort']['default']}</option>\n                        <option value='first_name'>{resources['Persons']['Sort']['first_name']}</option>\n                        <option value='last_name'>{resources['Persons']['Sort']['last_name']}</option>\n                        <option value='birth_date'>{resources['Persons']['Sort']['birth_date']}</option>\n                        <option value='nationality'>{resources['Persons']['Sort']['nationality']}</option>\n                    </select>\n            </div>\n            <div className=\"content_2\">\n                <div >{resources['Persons']['number_of_persons']}</div>\n                    <select  onChange={(e) => {\n                        setCurrentPage(1)\n                        setPages({\n                            personsOnPage: parseInt(e.target.value),\n                            number_of_page: [...Array(Math.ceil(filterPersons.length/parseInt(e.target.value))).keys()].map(el => el+1),\n                            max: [...Array(Math.ceil(filterPersons.length/e.target.value)).keys()][[...Array(Math.ceil(filterPersons.length/e.target.value)).keys()].length-1]+1\n                        })\n                        }}>\n                        <option value='6'>6</option>\n                        <option value='10'>10</option>\n                        <option value='16'>16</option>\n                        <option value='26'>26</option>\n                    </select>\n            </div>\n            <div className=\"content_2\" id=\"col\">\n                <div>{resources['Movies']['Filtr']['filtr']}</div>\n                        <button onClick={()=>setFilrtDNationality(!filrtNationality)} className=\"filtr_button\">{resources['Persons']['Filtr']['nationality']}</button>\n                        {filrtNationality && \n                            <div id=\"col\">\n                                {persons.reduce((a,b) => {if (a.filter(nationality => nationality===b.nationality).length===0){ a.push(b.nationality)} return a},[]).map(\n                                    nationality => (\n                                        <button className=\"unchecked\" onClick={() => {\n                                            document.getElementById(`button_${nationality}`).className = document.getElementById(`button_${nationality}`).className===\"unchecked\" ? \"checked\" : \"unchecked\";\n                                        }} id={`button_${nationality}`} key={`dir_${nationality}`}>\n                                            <div className=\"title\">{nationality}</div>\n                                        </button>\n                                    )\n                                )}\n                            </div>\n                        }\n                        <button onClick={()=>setFilrtDirectedMovies(!filrtDirectedMovies)} className=\"filtr_button\">{resources['Persons']['Filtr']['movies']}</button>\n                        {filrtDirectedMovies && \n                            <div >\n                                {movies.reduce((a,b) => {\n                                    if (a.filter(directed_movies => directed_movies[0]===b.director_id).length===0){\n                                        a.push([b.director_id, 1]);\n                                        return a;\n                                    }else{\n                                        return a.filter(directed_movies => directed_movies[0]!==b.director_id)\n                                        .concat([[b.director_id, a.filter(directed_movies => directed_movies[0]===b.director_id)[0][1]+1]])\n                                    }},[]).map(directed_movies => directed_movies[1]).reduce((a,b) => { if (a.filter(a_val => a_val===b).length===0){a.push(b);} return a;},[])\n                                .sort(function(a, b){if(a < b) { return -1; } return 1}).map(\n                                    directed_movies => (\n                                            <button className=\"unchecked\" onClick={() => {\n                                                document.getElementById(`button_${directed_movies}`).className = document.getElementById(`button_${directed_movies}`).className===\"unchecked\" ? \"checked\" : \"unchecked\";\n                                            }} id={`button_${directed_movies}`}  key={`genre_${directed_movies}`}>\n                                                <div className=\"title\">{directed_movies}</div>\n                                            </button>\n                                    )\n                                )}\n                            </div>\n                        }\n                        <button onClick={()=>setFilrtAge(!filrtAge)} className=\"filtr_button\">{resources['Persons']['Filtr']['birth_date']}</button>\n                        <Formik\n                        initialValues={{\n                            date_start: \"\",\n                            date_end: \"\"\n                        }}\n                        onSubmit={handleFilter}\n                        enableReinitialize = {true}>\n                        {({ errors, touched, isValidating }) => (\n                        <Form className=\"Form\" id=\"col\">\n                        {filrtAge &&\n                        <div id=\"col\">\n                            <div id=\"lil_text\">{resources['Movies']['Filtr']['from']}</div>\n                            <DatePicker\n                                name='date_start'\n                                id=\"pole\"\n                                dateFormat='dd.MM.yyyy'\n                                placeholder='dd.mm.yyyy'\n                                className=\"date_picker\"\n                                required\n                            />\n                            <div id=\"lil_text\">{resources['Movies']['Filtr']['to']}</div>\n                            <DatePicker\n                                name='date_end'\n                                id=\"pole\"\n                                dateFormat='dd.MM.yyyy'\n                                placeholder='dd.mm.yyyy'\n                                className=\"date_picker\"\n                                required\n                            />\n                        </div>}\n                        {(filrtNationality || filrtDirectedMovies || filrtAge) &&\n                            <button type=\"submit\" id=\"pole\" className=\"filtr_button\">\n                                {resources['Form']['submit_filtr']}\n                            </button>\n                        }\n                    </Form>)}\n            </Formik>\n            {(filrtNationality || filrtDirectedMovies || filrtAge) &&\n                <button id=\"pole\" className=\"filtr_button\" onClick={() => resetFilter()}>\n                    {resources['Form']['cancle_filtr']}\n                </button>\n            }                    \n            </div>\n            </div>\n            <div className=\"content\">\n                <div id=\"grid\">\n                    {sortPersons.filter((movie) => {return filterPersons.indexOf(movie) !== -1}).length === 0 ? (\n                            <div className=\"error\">{resources['Persons']['no_persons']}</div>\n                    ):(\n                        sortPersons.filter((movie) => {return filterPersons.indexOf(movie) !== -1})\n                        .slice((currentPage-1)*pages.personsOnPage, currentPage*pages.personsOnPage).map( person => (\n                        <Link to={`/person/${person.id}`} className=\"pod\" id=\"person_pod\" key={`${person.id}`}>\n                            <div id=\"row\">\n                            <img className=\"poster\" src={person.image_url}/>\n                                <div id=\"col\" className=\"person_info\">\n                                    <div className=\"last_name\">{person.last_name}</div>\n                                    <div className=\"first_name\">{person.first_name}</div>\n                                </div>\n                            </div>\n                        </Link>                \n                    )))}\n                </div>\n                {pages.number_of_page.length>1 && (\n                    <div className=\"pagenubmer\" id=\"row\">\n                    { currentPage>2 && (<button onClick={()=>{setCurrentPage(1)}} id=\"pagenubmer\"> first </button>)}\n                    {Math.max(0,currentPage-3)!==0 && (<div>...</div>)}\n                    { currentPage>1 && (<button onClick={()=>{setCurrentPage(currentPage-1)}} id=\"pagenubmer\"> &#8592; </button>)}\n                    {pages.number_of_page.slice(Math.max(0,currentPage-3), Math.min(currentPage+2, pages.max)).map((number) => \n                        (number===currentPage ? (<button onClick={()=>{setCurrentPage(number)}} id=\"pagenubmer\" className=\"activepage\" key={`${number}`}>{number}</button>\n                        ):(<button onClick={()=>{setCurrentPage(number)}} id=\"pagenubmer\" key={`${number}`}>{number}</button>))\n                    )}\n                    { currentPage<pages.max && (<button onClick={()=>{setCurrentPage(currentPage+1)}} id=\"pagenubmer\"> &#8594; </button>)}\n                    {Math.min(currentPage+2,pages.max)!==pages.max && (<div>...</div>)}\n                    { currentPage<pages.max-1 && (<button onClick={()=>{setCurrentPage(pages.max)}} id=\"pagenubmer\"> last </button>)}\n                </div>\n                )}\n            </div>\n        </div>\n        }\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n      persons: getPersons(state),\n      movies: getMovies(state)\n    }\n}\n  \nexport default connect(mapStateToProps, null)(Persons);","const GET_PERSONS = 'GET_PERSONS';\r\nconst ADD_PERSON = 'ADD_PERSON';\r\nconst DELETE_PERSON = 'DELETE_PERSON';\r\nconst UPDATE_PERSON = 'UPDATE_PERSON';\r\n\r\nconst types = {\r\n    GET_PERSONS,\r\n    ADD_PERSON,\r\n    DELETE_PERSON,\r\n    UPDATE_PERSON,\r\n}\r\n\r\nexport default types;\r\n","import './Persons.scss';\nimport { useEffect, useState } from \"react\";\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { connect } from 'react-redux'\n\nimport Popup from '../popup';\nimport NoPage from '../no_page';\n\nimport { getMovies } from '../../ducks/Movies/selectors';\nimport { getPersons } from '../../ducks/Persons/selectors';\nimport { deletePerson } from '../../ducks/Persons/operations';\nimport { updateMovie } from '../../ducks/Movies/operations';\n\nconst Person = ({resources, movies, persons, deletePerson, updateMovie}) => {\n\n    const {id: personID} = useParams();\n    const [person, setPerson] = useState(persons.filter(person => person.id === parseInt(personID)));\n    const [badId, setbadID] = useState(person.length > 0 ? (false):(true));\n    const [directedMovies, setDirectedMovies] = useState([])\n    const [showDirectedMovies, setShowDirectedMovies] = useState(false)\n    const [isOpen, setIsOpen] = useState(false);\n    const [popupContext, setPopupContext] = useState(\"\");\n    const [HandleClose, setHandleClose] = useState(() => () => setIsOpen(false));\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if(movies.length > 0){\n            if(persons.length > 0){\n                setPerson(persons.filter(person => person.id === parseInt(personID)));\n                setbadID(persons.filter(person => person.id === parseInt(personID)).length > 0 ? (false):(true))\n                setDirectedMovies(! badId && movies.filter(movie => movie.director_id === person[0].id))\n            }\n        }\n    }, [movies, persons, badId])\n\n    const handleDelete = () => {\n        directedMovies.length > 0 && directedMovies.forEach(movie => {\n            updateMovie({\n                id: parseInt(movie.id),\n                title: movie.title,\n                genre: movie.genre,\n                release_date: movie.release_date,\n                description: movie.description,\n                image_url: movie.image_url\n            })\n        });\n        deletePerson(parseInt(personID));\n        navigate('/persons');\n    }\n\n    return (\n        <div>\n            { badId ? (\n                <NoPage resources={resources}/>\n            ) : (\n                <div id=\"col\" className=\"person\">\n                    <div id=\"col\" className=\"movie\">\n                        <div className=\"nag\"> {person[0].first_name} {person[0].last_name} </div>\n                        <div className=\"content\">\n                            <div id=\"row\">\n                                <div id=\"col\">\n                                    <div> {resources['Persons']['birth_date']}: {new Date(person[0].birth_date).toLocaleDateString('en-GB')} </div>\n                                    <div> {resources['Persons']['nationality']}: {person[0].nationality} </div>\n                                </div>\n                                <img className=\"detail_poster\" src={person[0].image_url} alt={person[0].last_name}/>\n                            </div>\n                        </div>\n                        <div id=\"grid\" className=\"buttons\">\n                            <Link className=\"nag\" to={`/person/${personID}/edit`}>{ resources['Form']['edit']}</Link>\n                            <button className=\"nag\" onClick={async () => {\n                                setPopupContext(resources[\"Persons\"][\"delete_person\"]);\n                                setHandleClose(() => () => handleDelete())\n                                setIsOpen(true)\n                            }}>  {resources['Persons']['delete']}</button>\n                        </div>\n                    </div>\n                    { directedMovies.length > 0 &&\n                        <div className=\"movies\" id=\"col\">\n                            <button className=\"nag\" onClick={() => setShowDirectedMovies(!showDirectedMovies)}>  {resources['Persons']['directed_movies']}</button>\n                            { showDirectedMovies &&\n                            <div className=\"scroll\">\n                            { directedMovies.length > 3 ? (\n                                <div className=\"scroll_h\">\n                                    {directedMovies.map(movie => (\n                                        <Link to={`/movie/${movie.id}`} className=\"pod\" id=\"col\" key={`${movie.id}`}>\n                                            <img src={movie.image_url} alt={movie.title} />\n                                            <div className=\"title\">{movie.title}</div>\n                                        </Link>\n                                    ))}\n                                </div>\n                            ):(\n                                directedMovies.map(movie => (\n                                    <Link to={`/movie/${movie.id}`} className=\"pod\" id=\"col\" key={`${movie.id}`}>\n                                        <img  src={movie.image_url} alt={movie.title} />\n                                        <div className=\"title\">{movie.title}</div>\n                                    </Link>\n                                ))\n                            )}\n                            </div>\n                            }\n                        </div>\n                    }\n                </div>\n            )}\n            {isOpen && <Popup\n                content={popupContext}\n                handleClose={() => {HandleClose()}}\n            />}\n        </ div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n      persons: getPersons(state),\n      movies: getMovies(state)\n    }\n}\n  \nconst mapDispatchToProps = {\n    deletePerson,\n    updateMovie\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Person);","import axios from \"axios\";\r\nimport * as actions from './actions';\r\n\r\nimport persons from './../persons.json';\r\n\r\nexport const getPersons = () => {\r\n    return dispatch => {\r\n        dispatch(actions.getPersonsAction(persons));\r\n    }\r\n}\r\n\r\n\r\nexport const addPerson = (newPerson) => {\r\n    return async dispatch => {\r\n        dispatch(actions.addPersonAction(newPerson));\r\n    }\r\n}\r\n\r\nexport const updatePerson = (person) => {\r\n    return async dispatch => {\r\n        dispatch(actions.updatePersonAction(person));\r\n    }\r\n}\r\n\r\nexport const deletePerson = (PersonId) => {\r\n    return async dispatch => {\r\n        dispatch(actions.deletePersonAction({id: PersonId}));\r\n    }\r\n}\r\n","import types from './types';\r\n\r\nexport const getPersonsAction = (payload) => ({\r\n    type: types.GET_PERSONS,\r\n    payload\r\n});\r\n\r\nexport const addPersonAction = (payload) => ({\r\n    type: types.ADD_PERSON,\r\n    payload\r\n});\r\n\r\nexport const deletePersonAction = (payload) => ({\r\n    type: types.DELETE_PERSON,\r\n    payload\r\n});\r\n\r\nexport const updatePersonAction = (payload) => ({\r\n    type: types.UPDATE_PERSON,\r\n    payload\r\n});\r\n","import './Forms.scss';\nimport {Formik, Form, Field} from \"formik\";\nimport {DatePicker} from \"react-formik-ui\";\nimport { useEffect, useState } from \"react\";\nimport { useParams, Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\n\nimport Popup from \"../popup.js\"\nimport NoPage from '../no_page';\n\nimport { getMovies } from '../../ducks/Movies/selectors';\nimport { getPersons } from '../../ducks/Persons/selectors';\nimport { updateMovie} from '../../ducks/Movies/operations';\nimport { addMovie} from '../../ducks/Movies/operations';\n\nfunction MovieForm({resources, addMovie, updateMovie, movies, persons}) {\n\n    const {id: movieID} = useParams();\n    const [movie, setMovie] = useState([]);\n    const [badId, setbadID] = useState(movie.length > 0 ? (false):(true));\n    const [popupContext, setPopupContext] = useState(\"\");\n    const [isOpen, setIsOpen] = useState(false);\n    const [initialvalues, setInitialvalues] = useState({\n        title: '',\n        genre: '',\n        release_date: '',\n        description: '',\n        image_url: '',\n        director_id: ''\n    });\n    const Validate = (value) => {if (!value) return resources['Form']['validate']}\n\n    useEffect(() => {\n        setbadID(true);\n        if(movies){\n            if(movies.length > 0){\n                if(persons.length > 0){\n                    setMovie(movies.filter(movie => movie.id === parseInt(movieID)));\n                    if (movies.filter(movie => movie.id === parseInt(movieID)).length===1){\n                        setInitialvalues({\n                            title: movies.filter(movie => movie.id === parseInt(movieID))[0].title,\n                            genre: movies.filter(movie => movie.id === parseInt(movieID))[0].genre,\n                            release_date: movies.filter(movie => movie.id === parseInt(movieID))[0].release_date,\n                            description: movies.filter(movie => movie.id === parseInt(movieID))[0].description,\n                            image_url: movies.filter(movie => movie.id === parseInt(movieID))[0].image_url,\n                            director_id: movies.filter(movie => movie.id === parseInt(movieID))[0].director_id\n                        });\n                        setbadID(false);\n                    }\n                    else{\n\n                    }\n                }\n            }\n        }\n    }, [movies, persons])\n\n    const handleSubmit = async (values,actions) => {\n        values.director_id = parseInt(values.director_id)\n        if (movieID){\n            const put_values = values.director_id !== \"\" ? {\n                id: parseInt(movieID),\n                title: values.title,\n                genre: values.genre,\n                release_date: values.release_date,\n                description: values.description,\n                image_url: values.image_url,\n                director_id: values.director_id} : {\n                    id: parseInt(movieID),\n                    title: values.title,\n                    genre: values.genre,\n                    release_date: values.release_date,\n                    description: values.description,\n                    image_url: values.image_url\n            }\n            updateMovie(put_values);\n            setPopupContext(resources['Form']['thanks_update_movie']);\n            setIsOpen(true);\n            setInitialvalues({\n                title: put_values.title,\n                genre: put_values.genre,\n                release_date: put_values.release_date,\n                description: put_values.description,\n                image_url: put_values.image_url,\n                director_id: put_values.director_id\n            })\n        }\n        else{\n            const new_id = movies.sort(function(a, b){if(a.id < b.id) { return 1; } else return -1})[0].id + 1;\n            const put_values = values.director_id !== \"\" ? {\n                id: new_id,\n                title: values.title,\n                genre: values.genre,\n                release_date: values.release_date,\n                description: values.description,\n                image_url: values.image_url,\n                director_id: values.director_id} : {\n                    id: new_id,\n                    title: values.title,\n                    genre: values.genre,\n                    release_date: values.release_date,\n                    description: values.description,\n                    image_url: values.image_url\n            }\n            await addMovie(put_values);\n            setPopupContext(resources['Form']['thanks_add_movie']);\n            actions.resetForm({\n                    title: '',\n                    genre: '',\n                    release_date: '',\n                    description: '',\n                    image_url: '',\n                    director_id: ''});\n            setIsOpen(true);\n        }\n    }\n\n    return (\n        <>\n        { (persons.length>0 && (!badId || (badId && !movieID))) ? (\n        <>\n        <div id=\"col\" className=\"form\">\n            <div className=\"nag\">\n            { movieID  ? (\n                resources['Form']['edit_movie']\n            ):(\n                resources['Form']['add_movie']\n            )}\n            </div>\n        <div className=\"content\">\n            <Formik\n                initialValues={initialvalues}\n                onSubmit={(values,actions) => handleSubmit(values,actions)}\n                enableReinitialize = {true}>\n                {({ errors, touched }) => (\n                    <Form className=\"Form\" id=\"col\">\n                        {resources['Form']['title']}\n                        <Field type=\"text\" name=\"title\" id=\"pole\" validate={Validate}/>\n                        {errors.title && touched.title && <div className=\"valid_error\">{errors.title}</div>}\n                        {resources['Form']['genre']}\n                        <Field component=\"select\" name=\"genre\" id=\"pole\" placeholder=\"\" validate={Validate}>\n                            <option value=\"\" id=\"pole\"></option>\n                            {Object.keys(resources['Form']['genres']).map(genre => [genre, resources['Form']['genres'][genre]])\n                            .sort(function(a, b){if(a[1] < b[1]) { return -1; } if(a[1] > b[1]) { return 1; } return 0}).map( genre => (\n                                <option value={genre[0]} id=\"pole\">{genre[1]}</option>\n                            ))}\n                        </Field>\n                        {errors.genre && touched.genre && <div className=\"valid_error\">{errors.genre}</div>}\n                        {resources['Form']['release_date']}\n                        <DatePicker\n                            name='release_date'\n                            id=\"pole\"\n                            dateFormat='dd.MM.yyyy'\n                            placeholder='dd.mm.yyyy'\n                            className=\"date_picker\"\n                            required\n                            validate={Validate}\n                        />\n                        {errors.release_date && touched.release_date && <div className=\"valid_error\">{errors.release_date}</div>}\n                        {resources['Form']['description']}\n                        <Field as=\"textarea\" name=\"description\" id=\"pole\" validate={Validate}/>\n                        {errors.description && touched.description && <div className=\"valid_error\">{errors.description}</div>}\n                        {resources['Form']['movie_image_url']}\n                        <Field type=\"text\" name=\"image_url\" id=\"pole\"/>\n                        {resources['Form']['director_id']}\n                        <Field component=\"select\" name=\"director_id\" id=\"pole\" placeholder=\"\">\n                            <option value=\"\" id=\"pole\"></option>\n                            {persons.map((person => (\n                                <option value={person.id} id=\"pole\">{person.first_name} {person.last_name}</option>\n                            )))}\n                        </Field>\n                        <div id=\"row\">\n                            { movieID  && \n                                <button id=\"pole\">\n                                    <Link to={`/movie/${movieID}`} className=\"cancle\"> &#8617; {resources['Form']['cancle']}</Link>\n                                </button>}\n                            <button type=\"submit\" id=\"pole\">\n                                {resources['Form']['submit']}\n                            </button>\n                        </div>\n                    </Form>)}\n            </Formik>\n        </div>\n            {isOpen && <Popup\n                content={popupContext}\n                handleClose={() => {setIsOpen(false)}}\n            />}\n        </div>\n        </>\n        ):(\n            <NoPage resources={resources}/>\n        )}\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n      persons: getPersons(state),\n      movies: getMovies(state)\n    }\n}\n\nconst mapDispatchToProps = {\n    addMovie,\n    updateMovie,\n    // checkConnetion\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(MovieForm);","import './Forms.scss';\nimport {Formik, Form, Field} from \"formik\";\nimport { useEffect, useState } from \"react\";\nimport {DatePicker} from \"react-formik-ui\";\nimport { useParams, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Popup from \"../popup.js\";\nimport NoPage from '../no_page';\n\n\nimport { getMovies } from '../../ducks/Movies/selectors';\nimport { getPersons } from '../../ducks/Persons/selectors';\nimport { updatePerson } from '../../ducks/Persons/operations';\nimport { addPerson } from '../../ducks/Persons/operations';\n\nfunction PersonForm ({resources, addPerson, updatePerson, movies, persons}) {\n\n    const {id: personID} = useParams();\n    const [person, setPerson] = useState([]);\n    const [badId, setbadID] = useState(person.length > 0 ? (false):(true));\n    const [popupContext, setPopupContext] = useState(\"\");\n    const [isOpen, setIsOpen] = useState(false);\n    const [initialvalues, setInitialvalues] = useState({\n        first_name: '',\n        last_name: '',\n        birth_date: '',\n        image_url: '',\n        nationality: ''\n    });\n    const Validate = (value) => {if (!value) return resources['Form']['validate']}\n    \n\n    useEffect(() => {\n        setbadID(true);\n        if(movies){\n            if(movies.length > 0){\n                if(persons.length > 0){\n                    setPerson(persons.filter(person => person.id === parseInt(personID)));\n                    if (persons.filter(person => person.id === parseInt(personID)).length===1){\n                        setInitialvalues({\n                            first_name: persons.filter(person => person.id === parseInt(personID))[0].first_name ,\n                            last_name: persons.filter(person => person.id === parseInt(personID))[0].last_name,\n                            birth_date: persons.filter(person => person.id === parseInt(personID))[0].birth_date,\n                            image_url: persons.filter(person => person.id === parseInt(personID))[0].image_url,\n                            nationality: persons.filter(person => person.id === parseInt(personID))[0].nationality\n                        });\n                        setbadID(false);\n                    }\n                }\n            }\n        }\n    }, [movies, persons])\n\n    const handleSubmit = async (values,actions) => {\n        if (personID){\n            const put_values = {\n                id: parseInt(personID),\n                first_name: values.first_name,\n                last_name: values.last_name,\n                birth_date: values.birth_date,\n                image_url: values.image_url,\n                nationality: values.nationality};\n            await updatePerson(put_values);\n            setPopupContext(resources['Form']['thanks_update_person']);\n            setIsOpen(true);\n            setInitialvalues({\n                first_name: put_values.first_name,\n                last_name: put_values.last_name,\n                birth_date: put_values.birth_date,\n                image_url: put_values.image_url,\n                nationality: put_values.nationality})\n        }\n        else{\n            const new_id = persons.sort(function(a, b){if(a.id < b.id) { return 1; } else return -1})[0].id + 1;\n            const put_values = {\n                id: new_id,\n                first_name: values.first_name,\n                last_name: values.last_name,\n                birth_date: values.birth_date,\n                image_url: values.image_url,\n                nationality: values.nationality};\n            await addPerson(put_values);\n            setPopupContext(resources['Form']['thanks_add_person']);\n            actions.resetForm({\n                first_name: '',\n                last_name: '',\n                birth_date: '',\n                image_url: '',\n                nationality: ''});\n            setIsOpen(true);\n        }\n    }\n\n    return (\n        <>\n        { ((!personID || (!badId && personID))) ? (\n        <>\n        <div id=\"col\" className=\"form\">\n            <div className=\"nag\">\n                {person.length === 1 ? (resources['Form']['edit_person']):(resources['Form']['add_person'])}\n            </div>\n        <div className=\"content\">\n            <Formik\n                initialValues={initialvalues}\n                onSubmit={(values,actions) => handleSubmit(values,actions)}\n                enableReinitialize = {true}>\n                {({ errors, touched, isValidating }) => (\n                    <Form className=\"Form\" id=\"col\">\n                        {resources['Form']['first_name']}\n                        <Field name=\"first_name\" id=\"pole\" validate={Validate}/>\n                        {errors.first_name && touched.first_name && <div className=\"valid_error\">{errors.first_name}</div>}\n                        {resources['Form']['last_name']}\n                        <Field name=\"last_name\" id=\"pole\" validate={Validate}/>\n                        {errors.last_name && touched.last_name && <div className=\"valid_error\">{errors.last_name}</div>}\n                        {resources['Form']['birth_date']}\n                        <DatePicker\n                            name='birth_date'\n                            id=\"pole\"\n                            dateFormat='dd.MM.yyyy'\n                            placeholder='dd.mm.yyyy'\n                            className=\"date_picker\"\n                            required\n                            validate={Validate}\n                        />\n                        {errors.birth_date && touched.birth_date && <div className=\"valid_error\">{errors.birth_date}</div>}\n                        {resources['Form']['person_image_url']}\n                        <Field name=\"image_url\" id=\"pole\"/>\n                        {resources['Form']['nationality']}\n                        <Field name=\"nationality\" id=\"pole\" validate={Validate}/>\n                        {errors.nationality && touched.nationality && <div className=\"valid_error\">{errors.nationality}</div>}\n                        <div id=\"row\">\n                            { person.length === 1 && \n                                <button id=\"pole\">\n                                    <Link to={`/person/${personID}`} className=\"cancle\">&#8617; {resources['Form']['cancle']}</Link>\n                                </button>}\n                            <button type=\"submit\" id=\"pole\">\n                                {resources['Form']['submit']}\n                            </button>\n                        </div>\n                    </Form>)}\n            </Formik>\n        </div>\n        {isOpen && <Popup\n            content={popupContext}\n            handleClose={() => {setIsOpen(false)}}\n        />}\n    </div>\n    </>\n    ):(\n        <NoPage resources={resources}/>\n    )}\n    </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n      persons: getPersons(state),\n      movies: getMovies(state)\n    }\n}\n\nconst mapDispatchToProps = ({\n    addPerson,\n    updatePerson\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonForm);\n","import './Forms.scss';\n\nimport MovieForm from './MovieForm';\nimport PersonForm from './PersonForm';\n// import ActorForm from './ActorForm';\n\nconst Forms = ({store, resources}) => {\n\n    return (\n        <div className=\"forms\">\n            {/* <ActorForm store={store} resources={resources} ActorSubmit='ADD'/> */}\n            <MovieForm store={store} resources={resources}/>\n            <div id=\"col\" className=\"form\">\n                <PersonForm store={store} resources={resources}/>\n                <div className=\"nag\" id=\"add_director\">{resources['Form']['add_director']}</div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Forms;","const Error = ({resources}) => {\n    return (\n        <div className=\"content_2\" id=\"error\">\n            <div className=\"text\">\n                {resources['Error']['500']}\n            </div>\n        </div>\n    );\n};\n\nexport default Error","import './App.scss';\nimport {Route, Routes, Link, useLocation} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { connect } from 'react-redux'\n\n// import components\nimport Movies from '../Movies/Movies';\nimport Movie from '../Movies/Movie';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Persons from '../Persons/Persons';\nimport Person from '../Persons/Person';\nimport Forms from \"../Forms/Forms\";\nimport PersonForm from '../Forms/PersonForm';\nimport MovieForm from '../Forms/MovieForm';\nimport Error from '../error';\nimport NoPage from '../no_page';\n\n// import operations\nimport { getMovies } from '../../ducks/Movies/operations';\nimport { getPersons } from '../../ducks/Persons/operations';\n\n// import translation catalog\nimport resources_pl from '../../ducks/pl.json';\nimport resources_en from '../../ducks/en.json';\n\n\nfunction App({movies, getMovies, persons, getPersons}) {\n\n    // get data\n    useEffect(() => { (async () => {\n        if(persons.length === 0){\n            await getPersons()\n        }  \n        if(movies.length === 0){\n            await getMovies()\n        }\n    })()}, [persons, movies, getPersons, getMovies])\n\n    console.log(\"movies\", movies, \"persons\", persons)\n\n    // language\n    const [resources, setResources] = useState(resources_pl)\n    const handleLanguage = (languale) => {\n        if (languale===\"resources_pl\") { setResources(resources_pl)}\n        else {setResources(resources_en)}\n    }\n\n    // links\n    const links = [{path: \"/\", name: resources['App']['Navbar']['main']},\n                    {path: \"/add\", name: resources['App']['Navbar']['form']},\n                    {path: \"/movies\", name: resources['App']['Navbar']['movies']},\n                    {path: \"/persons\", name: resources['App']['Navbar']['persons']},\n                    // {path: \"/actors\", name: resources['App']['Navbar']['actors']}\n                ]\n    const location = useLocation();\n\n    return (\n        <div className=\"page\">\n            <div className=\"nav\">\n                <div className=\"links\">\n                    {links.map((link) => (\n                        location.pathname===link.path ?\n                        (<Link to={`${link.path}`} key={`${link.name}`}><div className=\"current_link\">{link.name}</div></Link>):\n                        (<Link to={`${link.path}`} key={`${link.name}`}><div>{link.name}</div></Link>)\n                    ))}\n                </div>\n                <div className=\"language\">\n                    <div >{resources['App']['Navbar']['language']['language']}</div>\n                        <select className=\"set_language\" onChange={(e) => handleLanguage(e.target.value)}>\n                            <option value='resources_pl'>{resources['App']['Navbar']['language']['polish']}</option>\n                            <option value='resources_en'>{resources['App']['Navbar']['language']['english']}</option>\n                        </select>\n                </div>\n            </div>\n            <div className=\"switch\">\n                { movies.length>0 && persons.length>0 ? (\n                <Routes>\n                    <Route exact path=\"/\" element={\n                        <Dashboard  resources={resources}/>}\n                    />\n                    <Route exact path=\"/movies\" element={\n                        <Movies  resources={resources}/>}\n                    />\n                    <Route exact path=\"/persons\" element={\n                        <Persons  resources={resources}/>}\n                    />\n                    <Route exact path=\"/add\" element={\n                        <Forms  resources={resources}/>}\n                    />\n                    <Route exact path=\"/movie/:id\" element={\n                        <Movie  resources={resources}/>}\n                    />\n                    <Route exact path=\"/movie/:id/edit\" element={\n                        <MovieForm  resources={resources}/>}\n                    />\n                    <Route exact path=\"/person/:id\" element={\n                        <Person  resources={resources}/>}\n                    />\n                    <Route exact path=\"/person/:id/edit\" element={\n                        <PersonForm  resources={resources}/>}\n                    />\n                    <Route element={\n                        <NoPage resources={resources}/>}\n                    />\n                </Routes>\n                ):(\n                    <Error resources={resources}/>\n                )}\n            </div>\n            <footer className=\"foot\"></footer>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        movies: state.movies,\n        persons: state.persons\n    }\n}\n  \nconst mapDispatchToProps = {\n    getMovies,\n    getPersons\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import thunk from 'redux-thunk';\nimport {createStore, applyMiddleware, combineReducers, compose} from 'redux';\nimport logger from 'redux-logger';\nimport { createMiddleware } from 'redux-api-middleware';\n// import {ActorsReducer} from \"./Actors/ActorsReducer.js\";\nimport {MoviesReducer} from \"./Movies/reducer.js\";\nimport {PersonsReducer} from \"./Persons/reducer.js\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst combinedReducers = combineReducers({\n  movies: MoviesReducer,\n  persons: PersonsReducer\n});\n\nconst store = createStore(combinedReducers, \n  composeEnhancers(applyMiddleware(thunk, createMiddleware(), logger)),\n);\n\nexport default store;","import types from './types';\r\n\r\nexport const MoviesReducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case types.GET_MOVIES:\r\n            return [...action.payload];\r\n        case types.ADD_MOVIE:\r\n            return [...state, action.payload];\r\n        case types.UPDATE_MOVIE:\r\n            return state.map(el=>{\r\n                if(el.id === action.payload.id){\r\n                    let updatedElement = el\r\n                    updatedElement.title = action.payload.title\r\n                    updatedElement.genre = action.payload.genre\r\n                    updatedElement.release_date = action.payload.release_date\r\n                    updatedElement.description = action.payload.description\r\n                    updatedElement.image_url = action.payload.image_url\r\n                    updatedElement.director_id = action.payload.director_id\r\n                    return updatedElement \r\n                }\r\n                else{\r\n                    return el\r\n                }\r\n            })\r\n\r\n        case types.DELETE_MOVIE:\r\n            return [...state.filter(el => el.id !== action.payload.id)];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import types from './types';\r\n\r\nexport const PersonsReducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case types.GET_PERSONS:\r\n            return [...action.payload];\r\n        case types.ADD_PERSON:\r\n            return [...state, action.payload];\r\n        case types.UPDATE_PERSON:\r\n            return state.map(el=>{\r\n                if(el.id === action.payload.id){\r\n                    let updatedElement = el\r\n                    updatedElement.first_name = action.payload.first_name\r\n                    updatedElement.last_name = action.payload.last_name\r\n                    updatedElement.birth_date =  action.payload.birth_date\r\n                    updatedElement.image_url = action.payload.image_url\r\n                    updatedElement.nationality = action.payload.nationality\r\n                    return updatedElement \r\n                }\r\n                else{\r\n                    return el\r\n                }\r\n            })\r\n\r\n        case types.DELETE_PERSON:\r\n            return [...state.filter(el => el.id !== action.payload.id)];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './ui/App/App';\nimport { Provider } from 'react-redux';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from './ducks/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}